### Tomcat SSL & Network ###
#server.port=8080
#server.ssl.enabled=false
server.port=8443
server.ssl.enabled=true
server.ssl.key-alias=localhost
server.ssl.key-password=123456
server.ssl.key-store=classpath:keystore.jks
server.ssl.key-store-provider=SUN
server.ssl.key-store-type=JKS
server.ssl.key-store-password=123456

###### Spring Properties ######
#--- Database --- #
spring.datasource.url=jdbc:h2:mem:bits;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.platform=h2
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.driverClassName=org.h2.Driver
spring.h2.console.enabled=true
spring.h2.console.path=/console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

spring.jta.enabled=true

#--- jackson - JSON ---
spring.jackson.serialization.INDENT_OUTPUT=true
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.time-zone=America/Toronto

# --- Email ---
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=username
spring.mail.password=pwd12345
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=10000
spring.mail.properties.mail.smtp.starttls.enable=true
# --- Email for amazon ---
#spring.mail.host=email-smtp.us-west-2.amazonaws.com
#spring.mail.properties.mail.smtp.port=25
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.starttls.required=true

# --- JPA Settings ---
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=trace

# --- ANSI support ---
spring.output.ansi.enabled=ALWAYS

###### SpringDoc OpenAPIProperties ######
# Disabling the api-docs enpoint
springdoc.api-docs.enabled=true
#springdoc.api-docs.path=/v3/api-docs
# Disabling the swagger-ui
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

#Packages or path to include
springdoc.packagesToScan=com.itdevcloud
springdoc.pathsToMatch=/jappcore/open/**, /jappcore/api/**

jappcore.openapi.info.title=Defaul Core API
jappcore.openapi.info.description=Default Services. API YAML file can be downloaded [here](/v3/api-docs.yaml). <p> How to Use: <p> Setup: Contact API support team to obtain system access credentials (username/password). <p> Step 1. Use authentication service to get an access Json Web Token (JWT). <p> Step 2. Attach the JWT in request header (Authorization Bearer ) to consume services. Refer to API Document section 2.3 for potential JWT management and API invocation flow.
jappcore.openapi.info.version=1.0.0 drfat
jappcore.openapi.info.contact.name=Default API Support Team
jappcore.openapi.info.contact.url=
jappcore.openapi.info.contact.email=defaultapi-supput@jappcore.ca
jappcore.openapi.info.license.name=Terms and Conditions
jappcore.openapi.info.license.url=http://jappcore.ca
jappcore.openapi.externalDocs.description=Download API Specification (Microsoft Word)
jappcore.openapi.externalDocs.url=
jappcore.openapi.externalDocs.filename=
#set it in environment variale, -D options or here
#here may overwirte OS variables, it seems not correct
jappcore.openapi.server.list=
jappcore.openapi.security.requirement.name=core-bear-jwt

###### JAPP Properties ######
jappcore.async.executor.core.pool.size=2
jappcore.async.executor.queue.capacity=4
jappcore.async.executor.max.pool.size=15
# supported value: default, requeque, callerrun
jappcore.async.executor.reject.policy=requeque

jappcore.http.proxy.server=
#jappcore.http.proxy.port=3128

jappcore.app.application.id=jappcore
jappcore.app.application.name=Core Application
jappcore.app.application.organization.ID=CoreOrganization
jappcore.app.application.version=1.0.0
jappcore.app.spring.scan.base.package=com.itdevcloud
jappcore.app.api.controller.path.root=jappcore
jappcore.app.maintenance.mode.enabled=false
jappcore.app.maintenance.mode.role.allowed=japp.br.maintainence.support
jappcore.app.system.notification.email.enabled=true
jappcore.app.system.notification.schedule.cron=0 0 15 * * ?
jappcore.app.system.maintenance.cron=0 0 04 * * ?
jappcore.app.system.performance.warning.threshold.seconds=5
jappcore.app.system.performance.alert.threshold.seconds=10
jappcore.app.log.dir=/${jappcore.app.application.id}/logs
jappcore.app.log.file.prefix=${jappcore.app.application.id}
jappcore.app.log.current.log.filename=${jappcore.app.application.id}.log
jappcore.app.startup.notification.waiting.seconds=60

jappcore.app.core.controller.enabled.commands=Echo,BasicAuth,SignedBasicAuth,EncryptText,DecryptTexxt,FindReferenceCode,GetCertificate,GetPublicKey,SignText,VerifySignature,GetIaaUser,ValidateOrIssueNewToken,TokenAuth
jappcore.app.command.controller.enabled=true

jappcore.cache.refresh.interval.millis=3600000
jappcore.cache.refresh.least.interval.mins=30
jappcore.cache.daily.refresh.enabled=true
jappcore.cache.user.cache.max.size=200000

#valid values for email provider: spring, sendgrid, log
jappcore.email.provider=log
jappcore.email.default.to.async=true
jappcore.email.async.waitforresponse=false
jappcore.email.bus.toaddresses=
jappcore.email.it.toaddresses=api-support@jappcore.ca
jappcore.email.system.fromaddress=no-reply-${jappcore.app.application.id}@jappcore.ca
jappcore.email.system.replytoaddress=no-reply-${jappcore.app.application.id}@jappcore.ca
jappcore.email.sendgrid.api.key=
jappcore.email.sendtogroup=false

# --- IAA --- #
jappcore.iaa.japp.api.auth.enabled=true
jappcore.iaa.token.validate.ip.enabled=true
jappcore.iaa.token.validation.ignorenullintoken=true
jappcore.iaa.token.enforce.toekn.nonce=true
jappcore.iaa.token.enforce.toekn.ip=true
# Provider = JJWT, AUTH0
jappcore.iaa.token.provider=JJWT

#japp-local means access token is issued by this app itself. 
jappcore.iaa.accessstoken.handler.name=AppLocalTokenHandler

#support: none, verificationCode, TOTP
jappcore.iaa.2ndfactor.type=none
jappcore.iaa.cidr.user.whitelist.enabled=false
jappcore.iaa.api.autorenew.access.token.enabled=true
jappcore.iaa.cidr.application.whitelist=any
jappcore.iaa.token.access.expiration.length.mins=30
jappcore.iaa.token.refresh.expiration.length.mins=480
jappcore.iaa.token.idtoken.expiration.length.mins=5
jappcore.iaa.token.verify.expiration.length=10
jappcore.iaa.token.issue.iss=jappcore
jappcore.iaa.token.validate.aud=
jappcore.iaa.application.rolecheck.enabled=true
jappcore.iaa.application.rolelist=
#jappcore.iaa.use.thirdparty.token=true
jappcore.iaa.auth.exclude.paths=/favicon.ico;/open;/swagger;/api-docs
#jappcore.iaa.auth.app.callback.url=
jappcore.iaa.processor.empty.target.role.allowed=false;
jappcore.iaa.auth.desktop.callback.url=https://localhost:8443/open/logincallbackservlet

jappcore.iaa.transfer.toekn.to.client.js.path=/open/core/transfer_token_to_client_script
jappcore.iaa.transfer.toekn.to.client.css.path=/open/core/transfer_token_to_client_style

### UI setting ###
#support: none, angular
jappcore.frontend.ui.framework=none
jappcore.frontend.ui.origin=http://localhost:4200
jappcore.frontend.ui.post.signout.page=http://localhost:4200/#/loggedOut
jappcore.frontend.ui.home.page=http://localhost:8443/index.html
jappcore.frontend.ui.token.page=http://localhost:4200/#/token
jappcore.frontend.ui.maintenance.page=
jappcore.frontend.ui.secure.cookie.enabled=false

### these paths must match what are defined in OpenRestController!!! ###
#jappcore.frontend.onlinetokenloader.js.path=/open/core/online_token_loader_script
#jappcore.frontend.desktoptokenloader.js.path=/open/core/desktop_token_loader_script
#jappcore.frontend.onlinehandleredirect.js.path=/open/core/online_handle_redirect_script
#jappcore.frontend.onlineloginerror.js.path==/open/core/online_login_error_script

### Authentication (Identity) Provider ###
#provider either: AAD-OAUTH2, BASIC-AUTH
jappcore.iaa.supported.auth.providers=CORE-AAD-OIDC,CORE-BASIC

# --- AAD --- #
aad.clientid=c3d6299f-2aed-45be-ab4f-857f5961b13e
# valid values:n/a, login, none, consent
aad.auth.prompt=login
aad.openIdMetaDataUrl=https://login.windows.net/Ontariogov.onmicrosoft.com/.well-known/openid-configuration
aad.auth.url=https://login.microsoftonline.com/Ontariogov.onmicrosoft.com/oauth2/authorize
aad.auth.logout.url=https://login.microsoftonline.com/Ontariogov.onmicrosoft.com/oauth2/logout
jappcore.iaa.aad.redirect.url=https://localhost:8443/open/aadauth

# ---JAPP-BASIC ---#
jappcore.iaa.basic.authorization.url=http://localhost:4200/#/loginui
#jappcore.iaa.basic.clientid=
#jappcore.iaa.basic.secret=
jappcore.iaa.basic.redirecturi=https://localhost:8443/basicauth
jappcore.iaa.basic.resource=https://localhost:8443/

# ---JAPP-DYNAMIC ---#
jappcore.iaa.dynamic.authorization.url=http://localhost:4200/#/loginname
#jappcore.application.id=

###### Azure Key Vault #######
azure.keyvault.enabled=false
azure.keyvault.uri=
azure.keyvault.client-id=
azure.keyvault.client-key=
azure.keyvault.token-acquire-timeout-seconds=30
azure.keyvault.secret.pkcs12.password=
azure.keyvault.secret.key.password=
azure.keyvault.secret.key.alias=

###### Azure Application Insight #######
azure.application-insights.connection-string=
azure.application-insights.enabled=false
azure.application-insights.web.enabled=false
azure.application-insights.web.w3c=true
azure.application-insights.quick-pulse.enabled=false
# Enable/Disable developer mode, all telemetry will be sent immediately without batching. Significantly affects performance and should be used only in developer environment. Default value: false.
azure.application-insights.channel.in-process.developer-mode=false

